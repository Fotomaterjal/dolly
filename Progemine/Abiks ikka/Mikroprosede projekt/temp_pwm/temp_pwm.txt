/*
 * sten_prajekt.c
 *
 * Created: 3.06.2014 11:27:30
 *  Author: Oll
 */ 
/*http://www.avrfreaks.net/index.php?name=PNphpBB2&file=printview&t=97409&start=0 */

#define high(x)   ((x)>>8)
#define low(x)   ((x) & 0xFF)

#include <avr/io.h>

uint16_t measureVoltage();



int main(void)
{
	//ADC
	//selecting reference voltage VCC, measure voltage on pin ADC2
	ADMUX |= (1 << REFS0 | 1 << MUX1);
	
	//setting port b pin5 to output
	DDRB = (1 << PB5 | 1 << PB4);
	
	//TIMER
	//initializing timer values
	TCCR1A = 0;
	TCCR1C = 0;
	//setting default clock (CPU clock), set compare match mode for TCCR1B (CTC)
	TCCR1B = (1 << CS10 | 1 << WGM12);
	//setting TCCR1 to "Fast PWM 10bit", setting OC1A low after compare match
	TCCR1A = (1<<WGM11 | 1<<WGM10 | 1<<COM1A1);	
	
	//TIMER2
	//initializing timer values
	TCCR2A = 0;
	TCCR2B = 0;
	//setting default clock (CPU clock), set compare match mode for TCCR1B (CTC)
	TCCR2B = (1 << CS22 | 1 << WGM22);
	//setting TCCR1 to "Fast PWM 10bit", setting OC1A low after compare match
	TCCR2A = (1<<WGM21 | 1<<WGM20 | 1<<COM2A1);	
	
	
	
	
	
	while(1)
	{
		// output compare register 1A (for PWM)
		OCR1A =	measureVoltage();
		//OCR2A =	high(measureVoltage());
	}
}


uint16_t measureVoltage(){
	//ADC enable, ADC start conversion
	ADCSRA = (1 << ADEN);
	ADCSRA |= (1 << ADSC);
	//loop for checking ADIF flag
	while(~ADCSRA&(1 << ADIF)){
		asm("nop");
	}
	//if conversion complete, reset ADIF flag
	ADCSRA = (1 << ADIF);
	return ADC;
}